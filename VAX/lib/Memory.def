(*****************************************************************************
 *									     *
 *             Copyright 1984-1990 Digital Equipment Corporation             *
 *                         All Rights Reserved				     *
 *								             *
 * Permission to use, copy, and modify this software and its documentation   *
 * is hereby granted only under the following terms and conditions.  Both    *
 * the above copyright notice and this permission notice must appear in all  *
 * copies of the software, derivative works or modified versions, and any    *
 * portions thereof, and both notices must appear in supporting              *
 * documentation.							     *
 *									     *
 * Users of this software agree to the terms and conditions set forth        *
 * herein, and hereby grant back to Digital a non-exclusive, unrestricted,   *
 * royalty-free right and license under any changes, enhancements or         *
 * extensions made to the core functions of the software, including but not  *
 * limited to those affording compatibility with other hardware or software  *
 * environments, but excluding applications which incorporate this software. *
 * Users further agree to use their best efforts to return to Digital any    *
 * such changes, enhancements or extensions that they make and inform        *
 * Digital of noteworthy uses of this software.  Correspondence should be    *
 * provided to Digital at:						     *
 * 									     *
 *                       Director of Licensing				     *
 *                       Western Research Laboratory			     *
 *                       Digital Equipment Corporation			     *
 *                       100 Hamilton Avenue				     *
 *                       Palo Alto, California  94301  			     *
 * 									     *
 * This software may be distributed (but not offered for sale or transferred *
 * for compensation) to third parties, provided such third parties agree to  *
 * abide by the terms and conditions of this notice.  			     *
 * 									     *
 * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS    *
 * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED        *
 * WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL    *
 * EQUIPMENT CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR     *
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF    *
 * USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR     *
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR    *
 * PERFORMANCE OF THIS SOFTWARE.				    	     *
 *									     *
 *****************************************************************************)

DEFINITION MODULE Memory;

(* This is a dummy definition module to indicate what is in the		    *)
(* the pseudo-module Memory.  Note that all identifiers here are	    *)
(* recognized regardless of case.					    *)

(* The following note appears in Storage.def and Memory.def *)

(* NOTE:
   Modula-2 generates code to validate pointers before dereferencing
   them.  Storage allocated by the NEW operation has an extra word at
   the beginning that points to the second word, which is where the
   pointer points.  Thus, the pointer validation looks like
	cmpl	rx,-4(rx)
   The word is set up by the New operation, which calls Storage.ALLOCATE
   asking for one more word than the user needs and sets things up.  Thus,
   New and the pointer check work correctly with any ALLOCATE.  This is set
   up whether compiling with -C or not, since some modules may do checking
   and others not.

   To avoid this check and eliminate the extra word, declare your pointers
   as follows:
    TYPE
	UncheckedPointer = POINTER @NOCHECK TO Oblivion;

   If you need to call ALLOCATE directly instead of NEW, you must either
   declare the pointers to be @NOCHECK, or import ALLOCATE and DEALLOCATE
   from Memory.

   Remember, Memory.ALLOCATE and Memory.DEALLOCATE are for checked memory,
   Storage.ALLOCATE and Storage.DEALLOCATE are for @NOCHECK memory.
*)

FROM SYSTEM IMPORT ADDRESS;

PROCEDURE ALLOCATE(VAR p : ADDRESS); n : CARDINAL;
PROCEDURE DEALLOCATE(VAR p : ADDRESS); n : CARDINAL;

END Memory.
