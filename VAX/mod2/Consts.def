definition module Consts;

(*****************************************************************************
 *									     *
 *             Copyright 1984-1990 Digital Equipment Corporation             *
 *                         All Rights Reserved				     *
 *								             *
 * Permission to use, copy, and modify this software and its documentation   *
 * is hereby granted only under the following terms and conditions.  Both    *
 * the above copyright notice and this permission notice must appear in all  *
 * copies of the software, derivative works or modified versions, and any    *
 * portions thereof, and both notices must appear in supporting              *
 * documentation.							     *
 *									     *
 * Users of this software agree to the terms and conditions set forth        *
 * herein, and hereby grant back to Digital a non-exclusive, unrestricted,   *
 * royalty-free right and license under any changes, enhancements or         *
 * extensions made to the core functions of the software, including but not  *
 * limited to those affording compatibility with other hardware or software  *
 * environments, but excluding applications which incorporate this software. *
 * Users further agree to use their best efforts to return to Digital any    *
 * such changes, enhancements or extensions that they make and inform        *
 * Digital of noteworthy uses of this software.  Correspondence should be    *
 * provided to Digital at:						     *
 * 									     *
 *                       Director of Licensing				     *
 *                       Western Research Laboratory			     *
 *                       Digital Equipment Corporation			     *
 *                       100 Hamilton Avenue				     *
 *                       Palo Alto, California  94301  			     *
 * 									     *
 * This software may be distributed (but not offered for sale or transferred *
 * for compensation) to third parties, provided such third parties agree to  *
 * abide by the terms and conditions of this notice.  			     *
 * 									     *
 * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS    *
 * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED        *
 * WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL    *
 * EQUIPMENT CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR     *
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF    *
 * USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR     *
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR    *
 * PERFORMANCE OF THIS SOFTWARE.				    	     *
 *									     *
 *****************************************************************************)


from IO import
    File;

from Machine import
    HugeInteger;

from Tokens import
    Token;

from Symbols import
    ConstNode, IdentList, ConstSetList, ConstSetNode, TypeNode,
    ConstParamList, ConstParamNode;


const
$IF vms THEN
    DefaultExitStatus = 1.0; (* an odd ExitStatus is good on VMS *)
$ELSE
    DefaultExitStatus = 0.0; (* an even ExitStatus is good on UNIX *)
$END

(* debug *) procedure WriteConstant(f : File; con : ConstNode); 

procedure OrdOf(cn : ConstNode) : HugeInteger; 

procedure CardinalConst(value : HugeInteger) : ConstNode; 

procedure AssignableConst(tn : TypeNode; cn : ConstNode) : boolean;

(* grammar *) procedure @external ConstSym(names : IdentList) : ConstNode; 

(* grammar *) procedure @external MakeConstSet (const lower : ConstNode;
					              upper : ConstNode) 
	: ConstSetNode; 

(* grammar+ *) procedure @external AddToConstSetList (list   : ConstSetList; 
						      newOne : ConstSetNode)
	: ConstSetList; 

(* grammar+ *) procedure @external ConstSet(elementList : ConstSetList; 
					    setType     : TypeNode) 
	: ConstNode;
	
(* grammar+ *) procedure @external ConstUnOp(oper : Token; 
					     opnd : ConstNode) : ConstNode; 

(* grammar+ *) procedure @external ConstBinOp(oper  : Token; 
					      opnd1 : ConstNode; 
					      opnd2 : ConstNode; 
					      eval  : boolean)
	: ConstNode; 

(* grammar *) procedure @external AddToConstParamList(list   : ConstParamList; 
						      newOne : ConstParamNode) 
	: ConstParamList;

(* grammar *) procedure @external ConstParamIdent(names : IdentList) 
	: ConstParamNode;

(* grammar *) procedure @external ConstParamConst(cn : ConstNode) 
	: ConstParamNode;

end Consts.
