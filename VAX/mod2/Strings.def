definition module Strings;

(*****************************************************************************
 *									     *
 *             Copyright 1984-1990 Digital Equipment Corporation             *
 *                         All Rights Reserved				     *
 *								             *
 * Permission to use, copy, and modify this software and its documentation   *
 * is hereby granted only under the following terms and conditions.  Both    *
 * the above copyright notice and this permission notice must appear in all  *
 * copies of the software, derivative works or modified versions, and any    *
 * portions thereof, and both notices must appear in supporting              *
 * documentation.							     *
 *									     *
 * Users of this software agree to the terms and conditions set forth        *
 * herein, and hereby grant back to Digital a non-exclusive, unrestricted,   *
 * royalty-free right and license under any changes, enhancements or         *
 * extensions made to the core functions of the software, including but not  *
 * limited to those affording compatibility with other hardware or software  *
 * environments, but excluding applications which incorporate this software. *
 * Users further agree to use their best efforts to return to Digital any    *
 * such changes, enhancements or extensions that they make and inform        *
 * Digital of noteworthy uses of this software.  Correspondence should be    *
 * provided to Digital at:						     *
 * 									     *
 *                       Director of Licensing				     *
 *                       Western Research Laboratory			     *
 *                       Digital Equipment Corporation			     *
 *                       100 Hamilton Avenue				     *
 *                       Palo Alto, California  94301  			     *
 * 									     *
 * This software may be distributed (but not offered for sale or transferred *
 * for compensation) to third parties, provided such third parties agree to  *
 * abide by the terms and conditions of this notice.  			     *
 * 									     *
 * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS    *
 * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED        *
 * WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL    *
 * EQUIPMENT CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR     *
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF    *
 * USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR     *
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR    *
 * PERFORMANCE OF THIS SOFTWARE.				    	     *
 *									     *
 *****************************************************************************)


from IO import
    File;

const
    STRINGBLOCKSIZE = 10000;
    MAXSTRINGSIZE = 1000;

type
    StringIndex   = integer[0..STRINGBLOCKSIZE];
    StringLength  = integer[0..MAXSTRINGSIZE];
    StringBlock   = pointer to StringBlockRec;
    StringBlockRec = record;
	s      : array StringIndex of char;
	next   : StringBlock;
    end;
    String     = pointer to StringRec;
    StringRec  = record
	block  : StringBlock;
	index  : StringIndex;
	length : StringLength;
	hash   : integer;   (* hash value for quick comparisons *)
	next   : String;
    end;

procedure NewString(): String; 

procedure NonHashString() : String; (* No hash value, not in hash table *)

procedure AddChar(const c : char); 

procedure GetChar(s : String; charNum : StringLength) : char; 

procedure AddText(const s : array of char); 

procedure NewText(const s : array of char) : String;

procedure KnownText(const s      : array of char;
		    const length : integer;
		    const hash   : integer) : String;

procedure NonHashText(const s : array of char) : String; 

procedure KnownNonHashText(const s : array of char; const length : integer)
    : String;

procedure AddString(const str : String); 

procedure WriteString(f : File; const s : String); 

procedure WriteStringConst(f : File; const s : String); 

procedure CopyString(const str : String; var arr : array of char);

procedure DumpStrings(); 

procedure EqualAnyCase(const left, right : String) : boolean; 

procedure Compare(const left, right : String) : integer;

type
    ErrorProc = procedure(const (* message *) array of char);

procedure InitStrings(const error : ErrorProc);

end Strings.
