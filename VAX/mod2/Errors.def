definition module Errors;

(*****************************************************************************
 *									     *
 *             Copyright 1984-1990 Digital Equipment Corporation             *
 *                         All Rights Reserved				     *
 *								             *
 * Permission to use, copy, and modify this software and its documentation   *
 * is hereby granted only under the following terms and conditions.  Both    *
 * the above copyright notice and this permission notice must appear in all  *
 * copies of the software, derivative works or modified versions, and any    *
 * portions thereof, and both notices must appear in supporting              *
 * documentation.							     *
 *									     *
 * Users of this software agree to the terms and conditions set forth        *
 * herein, and hereby grant back to Digital a non-exclusive, unrestricted,   *
 * royalty-free right and license under any changes, enhancements or         *
 * extensions made to the core functions of the software, including but not  *
 * limited to those affording compatibility with other hardware or software  *
 * environments, but excluding applications which incorporate this software. *
 * Users further agree to use their best efforts to return to Digital any    *
 * such changes, enhancements or extensions that they make and inform        *
 * Digital of noteworthy uses of this software.  Correspondence should be    *
 * provided to Digital at:						     *
 * 									     *
 *                       Director of Licensing				     *
 *                       Western Research Laboratory			     *
 *                       Digital Equipment Corporation			     *
 *                       100 Hamilton Avenue				     *
 *                       Palo Alto, California  94301  			     *
 * 									     *
 * This software may be distributed (but not offered for sale or transferred *
 * for compensation) to third parties, provided such third parties agree to  *
 * abide by the terms and conditions of this notice.  			     *
 * 									     *
 * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS    *
 * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED        *
 * WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL    *
 * EQUIPMENT CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR     *
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF    *
 * USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR     *
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR    *
 * PERFORMANCE OF THIS SOFTWARE.				    	     *
 *									     *
 *****************************************************************************)



from Strings import
    String;

from Symbols import
    ExprNode, StmtNode, ProcNode, ConstNode;

var
    numberOfErrors : cardinal;
    totalErrors    : cardinal;

procedure SilentError();

procedure Error(const msg : array of char); 

procedure Warning(const msg : array of char); 

procedure ErrorName(const name : String; const msg : array of char); 

procedure ErrorNumber(const msg : array of char; const number : integer); 

procedure ErrorNameNumber(const name   : String;
			  const msg    : array of char;
			  const number : integer);

procedure ErrorUnsigned(const msg : array of char; const number : unsigned);

procedure ExprWarning(const en : ExprNode; const msg : array of char);

procedure ExprError(const en : ExprNode; const msg : array of char);

procedure ExprErrorName(const en   : ExprNode; 
			const name : String; 
			const msg  : array of char);
	
procedure ExprErrorNumber(const en     : ExprNode; 
			  const msg    : array of char; 
			  const number : integer);

procedure ExprErrorNameNumber(const en     : ExprNode; 
			      const name   : String; 
			      const msg    : array of char;
			      const number : integer);

procedure ExprErrorConst(const en   : ExprNode;
			       msg  : array of char;
			 const cn   : ConstNode);

procedure StmtError(const stn : StmtNode; const msg : array of char);

procedure StmtWarning(const stn : StmtNode; const msg : array of char);

procedure StmtErrorName(const stn : StmtNode; 
		        const name : String; 
			const msg  : array of char);

procedure ProcErrorName(const proc : ProcNode;
			const name : String;
			const msg  : array of char);
end Errors.
