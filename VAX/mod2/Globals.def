definition module Globals;

(*****************************************************************************
 *									     *
 *             Copyright 1984-1990 Digital Equipment Corporation             *
 *                         All Rights Reserved				     *
 *								             *
 * Permission to use, copy, and modify this software and its documentation   *
 * is hereby granted only under the following terms and conditions.  Both    *
 * the above copyright notice and this permission notice must appear in all  *
 * copies of the software, derivative works or modified versions, and any    *
 * portions thereof, and both notices must appear in supporting              *
 * documentation.							     *
 *									     *
 * Users of this software agree to the terms and conditions set forth        *
 * herein, and hereby grant back to Digital a non-exclusive, unrestricted,   *
 * royalty-free right and license under any changes, enhancements or         *
 * extensions made to the core functions of the software, including but not  *
 * limited to those affording compatibility with other hardware or software  *
 * environments, but excluding applications which incorporate this software. *
 * Users further agree to use their best efforts to return to Digital any    *
 * such changes, enhancements or extensions that they make and inform        *
 * Digital of noteworthy uses of this software.  Correspondence should be    *
 * provided to Digital at:						     *
 * 									     *
 *                       Director of Licensing				     *
 *                       Western Research Laboratory			     *
 *                       Digital Equipment Corporation			     *
 *                       100 Hamilton Avenue				     *
 *                       Palo Alto, California  94301  			     *
 * 									     *
 * This software may be distributed (but not offered for sale or transferred *
 * for compensation) to third parties, provided such third parties agree to  *
 * abide by the terms and conditions of this notice.  			     *
 * 									     *
 * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS    *
 * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED        *
 * WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL    *
 * EQUIPMENT CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR     *
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF    *
 * USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR     *
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR    *
 * PERFORMANCE OF THIS SOFTWARE.				    	     *
 *									     *
 *****************************************************************************)

(* Definitions that are included everywhere *)

from Strings import 
    String;

const
    DEBUG         = FALSE;

type
    DebugSet 	  = set of ['a'..'z'];
    TargetMachine = (TARGETVAX, TARGETTITAN, TARGETTITANM);

var
    debugSet	  : DebugSet;

    genCheckFlag  : cardinal;     (* runtime checking flag stack *)
    genPtrAssignCheckFlag : cardinal;   (* same for pointer assignment checks *)
$if pascal then
    standardPascalFlag,
    warningPascalFlag : cardinal;   (* Pascal flag stacks *)
    bufferFlag        : cardinal;   (* Pascal output buffering value *)
$end

    compiledDefFlag,		(* use, create compiled definition modules *)
    genDebugInfoFlag,		(* dbx debugging info *)
    genDebugInfoRuntimeFlag,    (* dbx debugging on Titan *)
    optimFlag,			(* invoke optimizer *)
    standardKeywordFlag,	(* standard identifiers and scoping *)
    standardCardinalFlag,       (* standard cardinal/integer compatibility *)
    standardStringFlag,		(* standard strings (no \ syntax) *)
    internalCallFlag,		(* force normal global procs to be internal *)
    OptNloop, 
    OptNreg, 
    OptNind, 
    OptNtail, 
    OptNcall	    : boolean;

    TraceCexpr,
    TraceDecls, 
    TraceGenpc, 
    TraceGent, 
    TraceNexpr, 
    TraceSymtab,
    TraceStab, 
    TraceNstmt, 
    TraceOpt, 
    TraceOptim,
    TraceMark, 
    TraceActions, 
    TraceCount      : boolean;

    target, host : TargetMachine;

(* printing indentation per level *)
const
    INDENT = 4;

const
    MODULEINITNAME = '_init';

var
    mainFileName 	: String;
    compileModuleName   : String;
end Globals.
